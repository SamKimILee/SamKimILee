<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="app.labs.admin.dao.AdminRepository">

    <!-- 로그인 쿼리 -->
    <select id="findById" parameterType="string" resultType="map">
        SELECT ADMIN_PWD FROM ADMIN
        WHERE ADMIN_ID = #{id}
    </select>

    <!-- 특정 회원 ID로 회원 정보 조회 쿼리 -->
    <select id="getMemberList" parameterType="java.util.Map" resultType="app.labs.register.model.Member">
        SELECT * FROM MEMBER
        <where>
            <if test="memberId != null and memberId != ''">
                MEMBER_ID LIKE '%' || #{memberId} || '%'
            </if>
            <if test="memberName != null and memberName != ''">
                AND MEMBER_NAME LIKE '%' || #{memberName} || '%'
            </if>
        </where>
    </select>

    <!-- 회원 상태 수정 -->
    <update id="updateMemberStatus">
        UPDATE MEMBER
        SET MEMBER_STATUS = #{memberStatus}
        WHERE MEMBER_ID = #{memberId}
    </update>

    <!-- 회원 통계 관련 -->
    <select id="getMemberStatsByYear" resultType="map">
        SELECT EXTRACT(YEAR FROM member_signup_date) as year, 
               COUNT(*) as count
        FROM member
        GROUP BY EXTRACT(YEAR FROM member_signup_date)
        ORDER BY year
    </select>

    <select id="getMemberStatsByMonth" resultType="map">
        SELECT TO_CHAR(member_signup_date, 'YYYY') as year,
               TO_CHAR(member_signup_date, 'YYYY-MM') as month, 
               COUNT(*) as count
        FROM member
        WHERE EXTRACT(YEAR FROM member_signup_date) = EXTRACT(YEAR FROM SYSDATE)
        GROUP BY TO_CHAR(member_signup_date, 'YYYY'), TO_CHAR(member_signup_date, 'YYYY-MM')
        ORDER BY month
    </select>

    <select id="getMemberStatsByDay" resultType="map">
        SELECT TO_CHAR(member_signup_date, 'YYYY-MM') as month,
               TO_CHAR(member_signup_date, 'YYYY-MM-DD') as day, 
               COUNT(*) as count
        FROM member
        GROUP BY TO_CHAR(member_signup_date, 'YYYY-MM'), TO_CHAR(member_signup_date, 'YYYY-MM-DD')
        ORDER BY day
    </select>
    
    <!-- 게시글 목록 조회 -->
    <select id="getBoardList" resultType="app.labs.board.model.Board">
        SELECT 
            board_id AS boardId,
            board_title AS boardTitle,
            board_category AS boardCategory,
            board_offensive AS boardOffensive,
            board_report AS boardReport,
            member_id AS memberId,
            TO_CHAR(board_date, 'YYYY-MM-DD HH24:MI:SS') AS boardDate,
            TO_CHAR(board_update, 'YYYY-MM-DD HH24:MI:SS') AS boardUpdate
        FROM board
        ORDER BY board_date DESC
    </select>

    <!-- 게시글 상세 조회 -->
    <select id="getBoardDetail" parameterType="int" resultType="app.labs.board.model.Board">
        SELECT 
            board_id AS boardId,
            board_title AS boardTitle,
            board_category AS boardCategory,
            board_content AS boardContent,
            board_offensive AS boardOffensive,
            board_report AS boardReport,
            member_id AS memberId,
            TO_CHAR(board_date, 'YYYY-MM-DD HH24:MI:SS') AS boardDate,
            TO_CHAR(board_update, 'YYYY-MM-DD HH24:MI:SS') AS boardUpdate
        FROM board
        WHERE board_id = #{boardId}
    </select>

    <!-- 게시글 상태 수정 (단일) -->
    <update id="updateBoardStatus" parameterType="map">
        UPDATE board 
        SET 
            board_offensive = #{boardOffensive},
            board_report = #{boardReport},
            board_update = CURRENT_TIMESTAMP
        WHERE board_id = #{boardId}
    </update>

    <!-- 감정 통계 관련 -->
    <!-- 당일 감정 통계 -->
    <select id="getDailyEmoDiary" resultType="map">
        SELECT DIARY_EMOTION, COUNT(DIARY_EMOTION) AS COUNT_EMOTION 
        FROM DIARY
        WHERE TRUNC(DIARY_DATE) = TRUNC(SYSDATE)
        GROUP BY DIARY_EMOTION
    </select>

    <!-- 전체 기간 감정 통계 -->
    <select id="getTotalEmoDiary" resultType="map">
        SELECT TRUNC(DIARY_DATE) AS DIARY_DATE, DIARY_EMOTION, COUNT(DIARY_EMOTION) AS COUNT_EMOTION 
        FROM DIARY
        GROUP BY TRUNC(DIARY_DATE), DIARY_EMOTION
        ORDER BY DIARY_DATE
    </select>

    <!-- 당일 게시판 감정 통계 -->
    <select id="getDailyEmoBoard" resultType="map">
        SELECT BOARD_CATEGORY, COUNT(BOARD_CATEGORY) AS COUNT_CATEGORY 
        FROM BOARD
        WHERE TRUNC(BOARD_DATE) = TRUNC(SYSDATE)
        GROUP BY BOARD_CATEGORY
    </select>

    <!-- 전체 기간 게시판 감정 통계 -->
    <select id="getTotalEmoBoard" resultType="map">
        SELECT TRUNC(BOARD_DATE) AS BOARD_DATE, BOARD_CATEGORY, COUNT(BOARD_CATEGORY) AS COUNT_CATEGORY 
        FROM BOARD
        GROUP BY TRUNC(BOARD_DATE), BOARD_CATEGORY
        ORDER BY BOARD_DATE
    </select>
</mapper>
